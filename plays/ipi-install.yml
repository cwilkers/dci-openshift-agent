---

- include_tasks: before-install.yml

- name: "installer: Check if .cache directory exists"
  stat:
    path: "{{ ansible_user_dir }}/.cache"
  register: cache_directory

- name: "installer: Cleanup old images"
  block:
    - name: "installer: Retrieve images older than max_images_age"
      find:
        paths: "{{ ansible_user_dir }}/.cache/openshift-installer/image_cache"
        file_type: file
        age: "{{ max_images_age | default('4w') | string }}"
        recurse: no
        use_regex: yes
      register: old_images_to_delete

    - name: "installer: Delete images older than max_images_age"
      file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ old_images_to_delete.files }}"
  when:
    - cleanup_old_images | default(false) | bool
    - cache_directory.stat.exists

- name: "installer : Populate clusterosimage"
  set_fact:
    clusterosimage: "{{ hostvars.localhost.clusterosimage }}"
  when: hostvars.localhost.clusterosimage is defined

- name: "installer : Populate bootstraposimage"
  set_fact:
    bootstraposimage: "{{ hostvars.localhost.bootstraposimage }}"
  when: hostvars.localhost.bootstraposimage is defined

- name: "installer : Populate master_network_config_template"
  set_fact:
    master_network_config_template: "{{ hostvars.localhost.master_network_config_template }}"
  when: hostvars.localhost.master_network_config_template is defined

- name: "installer : Populate worker_network_config_template"
  set_fact:
    worker_network_config_template: "{{ hostvars.localhost.worker_network_config_template }}"
  when: hostvars.localhost.worker_network_config_template is defined

- name: Override disconnected_registry_mirrors_file in the registry host
  set_fact:
    disconnected_registry_mirrors_file: "{{ dci_cluster_configs_dir }}/trust-bundle.yml"
  delegate_facts: true
  delegate_to: "{{ groups['registry_host'][0] if 'registry_host' in groups else 'registry_host' }}"
  when:
    - dci_disconnected | default(false) | bool


# TODO: Add nightly build support to IPI
# Web page is built on the fly for nightly builds.
# During 10 minutes, we will try to retrieve the url by making a request every 10 seconds.
# We reproduce the behavior of the HTML page (which refreshes the page every 5 seconds)
# We look at the "Extracting tools" keywords in the content of the HTML page.
- name: "Check base page"
  ansible.builtin.uri:
    url: "{{ hostvars.localhost.url }}"
    return_content: true
    status_code:
      - 200
      - 503
      - -1
  register: base_page
  retries: 60
  delay: 10
  until:
    - base_page.content is defined
    - "'Extracting tools' not in base_page.content"
  when:
    - hostvars.localhost.url.startswith("https://openshift-release-artifacts.apps")

- name: "installer : Node preparation"
  import_role:
    name: node-prep
  vars:
    release_url: "{{ (webserver_url|length) | ternary(webserver_url, '/'.join(hostvars.localhost.url.split('/')[:-1])) }}"

- name: "installer : Run IPI installer"
  import_role:
    name: installer
  vars:
    release_url: "{{ (webserver_url|length) | ternary(webserver_url, '/'.join(hostvars.localhost.url.split('/')[:-1])) }}"
...
